@{
    ViewData["Title"] = "<xmlRant/> - " + ViewBag.Sort;
}
@model String

<pre>
    <code class="language-markup">
    @{
        @Html.Raw("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?><br/>")
        @Html.Raw("&lt;devRant></br>")

        @Html.Raw("<div class='rantColl'>&lt;!-- Hexical Labs is the original creator of devRant --></div>")
        @Html.Raw("<div class='rantColl'>&lt;original><a target='_blank' href='https://www.devrant.io/feed/recent'>https://www.devrant.io/feed/recent</a>&lt;/original></div>")
        
        @Html.Raw("<div class='rantColl'>&lt;!-- Inspiration taken from jsRant.com, thanks ChappIO --></div>")
        @Html.Raw("<div class='rantColl'>&lt;inspiration><a target='_blank' href='http://jsRant.com'>http://jsRant.com</a>&lt;/inspiration></div>")
        
        @Html.Raw("<div class='rantColl'>&lt;!-- Oleg Rumiancev is the creator of this XML stylised version of devRant --></div>")
        @Html.Raw("<div class='rantColl'>&lt;creator><a target='_blank' href='https://www.linkedin.com/in/olegrumiancev/'>https://www.linkedin.com/in/olegrumiancev/</a>&lt;/creator></div>")

        @Html.Raw("<div class='rantColl'>&lt;sort></div>")
        @Html.Raw("<div class='rantTag'>&lt;algo><a href='/?sort=algo'>(click)" + 
        "</a>&lt;/algo><br/>&lt;recent><a href='/?sort=recent'>(click)</a>&lt;/recent><br/>&lt;top><a href='/?sort=top'>(click)</a>&lt;/top></div>")
        @Html.Raw("<div class='rantColl'>&lt;/sort></div>")

        @Html.Raw("<div class='rantColl'>&lt;" + Model + "s></div>")
        @Html.Raw("<div class='rantColl'>&lt;/" + Model + "s></div>")
        
        @Html.Raw("&lt;/devRant>")
    }
    </code>
</pre>

<div class="row" id="progress" style="display: none;">
    <div class="col-md-12">
        Loading...
    </div>
</div>

<script type="text/javascript">
    Prism.plugins.NormalizeWhitespace.setDefaults({
        'remove-trailing': false,
        'remove-indent': false,
        'left-trim': false,
        'right-trim': false
    });

    var productUserDiv = null;
    var productOverlay = null;
    var productOverlayImage = null;

    var pageSize = 10;
    var pageIndex = 0;
    var sort = '@Html.Raw(ViewBag.Sort)';
    //console.log(sort);
    $(document).ready(function () {
        prepareImageOverlay();
        getData();

        $(window).scroll(function () {
            if ($(window).scrollTop() == $(document).height() - $(window).height()) {
                getData();
            }
        });
    });

    function getData() {
        if ($("#progress").is(":visible")) {
            return;
        }
        $.ajax({
            type: 'GET',
            url: '/home/GetData',
            data: { sort: sort, "pageIndex": pageIndex, "pageSize": pageSize},
            dataType: 'json',
            success: function (data) {
                if (data != null) {
                    if (data.success) {
                        for (var i = 0; i < data.rants.length; i++) {
                            var uc = data.rants[i];
                            var $insertBeforeThis = $("pre > code > span:last-child").prev();
                            $insertBeforeThis.before(createHtmlFromContent(uc));
                            Prism.highlightElement($insertBeforeThis.prev()[0]);
                        }
                        pageIndex++;
                    }

                    var $contentsDiv = $('pre');
                    //console.log($contentsDiv.height() < $(window).height());
                    if ($contentsDiv.height() < $(window).height()) {
                        $("#progress").hide();
                        GetData();
                    }
                }
            },
            beforeSend : function() {
                $("#progress").show();
            },
            complete : function() {
                $("#progress").hide();
            },
            error: function(err) {
                $("#progress").hide();
                console.log(err);
            }
        });
    }

    function createHtmlFromContent(uc) {
        var createdDate = new Date(parseInt("" + uc.created_time + "000"));
        return "<div><div style='padding-top: 5px;' class='rantTag'>&lt;!-- Created: " + createdDate.toLocaleString() + ", open in devRant: <a target='_blank' href='https://devrant.io/rants/" + uc.id + "'>https://devrant.io/rants/" + uc.id + "</a> --></div>\
<div class='rantTag'>&lt;rant user=\"<a target='_blank' href='https://devRant.io/users/" + uc.user_username + "'>" + uc.user_username + "</a>\" \
score=\"" + uc.score + "\" commentCount=\"" + uc.num_comments + "\"></div>" +
        addTags(uc) + 
"<div class='rantCdata'>&lt;![CDATA[</div><div class='rantContent'>" + escapeHtml(uc.text) + 
"</div><div class='rantCdata'>]]></div>" +
        addImage(uc) + 
        addCollapsedComments(uc) +
"<div class='rantTag'>&lt;/rant></div></div>";
    }

    function addCollapsedComments(uc) {
        var res = '';
        if (uc.num_comments > 0) {
            res = "<div class='rantProp'>&lt;comments><div class='rantColl'><a href='javascript:void(0);' onclick='expandComments(this, " + uc.id + ");'>(click to load)</a></div>&lt;/comments></div>";
        }
        return res;
    }

    function expandComments(el, rantId) {
        $target = $(el).parent();
        $target.text("Loadnig!..");
        var result = '';
        $.ajax({
            type: 'GET',
            url: '/home/GetRant',
            data: { "rantId": rantId },
            dataType: 'json',
            success: function (data) {
                if (data != null) {
                    if (data.success) {
                        for (var i = 0; i < data.comments.length; i++) {
                            var comment = data.comments[i];
                            console.log(comment);
                            result += 
"<div class='rantColl'></div>";
                        }
                    }
                }
            },
            beforeSend : function() {
                $("#progress").show();
            },
            complete : function() {
                $("#progress").hide();
                $target.html(result);
                Prism.highlightElement($target[0]);
            },
            error: function(err) {
                $("#progress").hide();
                console.log(err);
            }
        });
    }

    function addTags(uc) {
        var res = '';
        if (uc.tags != null && uc.tags.length > 0) {
            for (var i = 0; i < uc.tags.length; i++) {
                res += (uc.tags[i] + '; ');
            }
            res = res.trim();
            res = "<div class='rantProp'>&lt;tags>" + res + "&lt;/tags></div>";
        }
        return res;
    }

    function addImage(uc) {
        var res = '';
        console.log(uc);
        if (uc.attached_image != null) {
            res = '<div class="rantProp">&lt;imageUrl><a href="javascript:void(0);" onclick="openImage(this)">' + escapeHtml(uc.attached_image.url) + '</a>&lt;/imageUrl></div>';
        }
        return res;
    }

    function openImage(el) {
        productOverlayImage.attr('src', el.innerText);
        productOverlay.fadeIn(100);
        $('body').css('overflow', 'hidden');

        $('.product-image-overlay-close, .product-image-overlay').click(function () {
            productOverlay.fadeOut(100);
            $('body').css('overflow', 'auto');
        });
    }

    function escapeHtml(str) {
        var div = document.createElement('div');
        var text = document.createTextNode(str);
        div.appendChild(text);
        return div.innerHTML;
    }

    function prepareImageOverlay() {
        $('body').append('<div class="product-image-overlay"><span class="product-image-overlay-close">x</span><img src="" /><div></div id="userDetails"></div>');
        productOverlay = $('.product-image-overlay');
        productUserDiv = $('.product-image-overlay #userDetails');
        productOverlayImage = $('.product-image-overlay img');
    }
</script>